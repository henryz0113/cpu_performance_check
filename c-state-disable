#!/bin/bash
#C-State Disable - Bash Script
#Script written by Henry Lee
#contact dk.lim@unity3d.com for editing the script
#Contributor DK.L
#Version 1.1.7

##Setting variable##
SSH_ARGS="-o StrictHostKeyChecking=no -o ConnectTimeout=10"
SH="ssh $SSH_ARGS"
SH_HOST="root@${1}"
IP=${1}
Green='\033[0;32m'
Yellow='\033[1;33m'
Red='\033[1;31m'
NC='\033[0m'
opt=${2}
day=`date | awk '{print $3}'`
month=`date | awk '{print $2}'`
host=`who am i | awk '{print $1}'`
dir="/home/${host}"

#Append exsisting log
append_log()
{
        get_file=`cd ${dir}; ls -rtl C-state-${month}-${day}-status 2> /dev/null`

        if [ $? -eq 0 ];then
                result=`cd ${dir} ; cksum  C-state-${month}-${day}-status | awk '{print $2'} `
                if [ $result == 0 ];then
                     cd /inst
                else
                     echo "File Appending : ${dir}/C-state-${month}-${day}-status"
                     echo "tail -f ${dir}/C-state-${month}-${day}-status"
                     sudo cp /dev/null ${dir}/C-state-${month}-${day}-status
                     cd /inst
                fi
        else
                echo "File Creating : ${dir}/C-state-${month}-${day}-status"
                echo "tail -f ${dir}/C-state-${month}-${day}-status"
                cd /inst
        fi
}

#Main condition

 if [[ "$1" == "-h" || "$1" == "--help" ]]; then
         echo "[I] LOOK BELOW FOR HOW TO USE"
         printf "${Red}Warning - do not run this script if you do not what you are doing!${NC}"
         echo " "
         printf "EX) ${Green}./scripts/utils/linux/c-state-disable IP_Adress${NC}"
         echo " "
         echo " "
         echo " -m  Running Multiple IPs"
         printf "Log file path : ${Yellow}${dir}/C-State-${month}-${day}-status${NC}"
         echo " "
         echo " "
         echo " "
         echo "If you wish to check C-state status"
         printf "use ${Yellow}Slowframecheck${NC} script with ${Green}-C${NC} option"
         echo " "
         exit 255
fi

if [[ ! "$IP" =~ ((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])
 ]]; then
        printf $Red"Please insert correct IP format 8.8.8.8"$NC
        echo " "
        printf $Yellow"Please type -h or --help to see how it works"$NC
        echo " "
        echo
        echo " "
        exit 255
fi


#Main Code
read_line()
{

        find1=`$SH $SH_HOST "cat $path | grep GRUB_CMDLINE_LINUX"`
        if [[ "$find1" == *"GRUB_CMDLINE_LINUX="* ]];then
             echo "" > /dev/null
        else
             code1=`$SH $SH_HOST "echo GRUB_CMDLINE_LINUX=>> $path"`
             code1a=`$SH $SH_HOST "sed -i 's/GRUB_CMDLINE_LINUX=/GRUB_CMDLINE_LINUX=\" \"/' ${path}"`
        fi

        find2=`$SH $SH_HOST "cat $path | grep GRUB_CMDLINE_LINUX_DEFAULT"`
        if [[ "$find2" == *"GRUB_CMDLINE_LINUX_DEFAULT"* ]];then
             echo "" > /dev/null
        else
             code2=`$SH $SH_HOST "echo GRUB_CMDLINE_LINUX_DEFAULT=>> $path"`
             code2a=`$SH $SH_HOST "sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT=/GRUB_CMDLINE_LINUX_DEFAULT=\" \"/' ${path}"`
        fi
}


check_comment()
{
        find3=`$SH $SH_HOST "cat $path | grep GRUB_CMDLINE_LINUX"`
        if [[ "$find3" == *"#GRUB_CMDLINE_LINUX="* ]];then
                edit3=`$SH $SH_HOST "sed -i 's/#GRUB_CMDLINE_LINUX=/GRUB_CMDLINE_LINUX=/' ${path}"`
        else
                echo "" > /dev/null
        fi


        find4=`$SH $SH_HOST "cat $path | grep GRUB_CMDLINE_LINUX_DEFAULT"`
        if [[ "$find4" == *"#GRUB_CMDLINE_LINUX_DEFAULT="* ]];then
                edit4=`$SH $SH_HOST "sed -i 's/#GRUB_CMDLINE_LINUX_DEFAULT=/GRUB_CMDLINE_LINUX_DEFAULT=/' ${path}"`
        else
                echo "" > /dev/null
        fi
}

c_state_check()
{
        c_gov=`$SH $SH_HOST "cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor 2> /dev/null"`
        c_state=`$SH $SH_HOST "cat /sys/module/intel_idle/parameters/max_cstate"`
        path=/etc/default/grub
        if [ "$c_state" == 0 ];then
                printf "${IP}${Green} C-State Disabled${NC}"
                echo " "
        else
                read_line
                check_comment
                edit1=`$SH $SH_HOST "sed -i 's/GRUB_CMDLINE_LINUX=\"/GRUB_CMDLINE_LINUX=\"intel_pstate=disable intel_idle.max_cstate=0 /' ${path}"`
                edit2=`$SH $SH_HOST "sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT=\"/GRUB_CMDLINE_LINUX_DEFAULT=\"intel_pstate=disable intel_idle.max_cstate=0 /' ${path}"`
                $SH $SH_HOST update-grub 2> /dev/null
                $SH $SH_HOST reboot 2> /dev/null
                sleep 300
                c2_state=`$SH $SH_HOST "cat /sys/module/intel_idle/parameters/max_cstate"`
                if [ "$c2_state" == 0 ];then
                        printf "${IP}${Green} C-State Disabled${NC}"
                        echo " "
                else
                        printf "${IP}${Red} C-State Enabled - Must be Disabled ${NC}${c_gov}"
                        echo " "
                fi
                echo ""
        fi


}

c_state_validate()
{
        c_gov=`$SH $SH_HOST "cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor"`
        c_state=`$SH $SH_HOST "cat /sys/module/intel_idle/parameters/max_cstate"`
        if [ "$c_state" == 0 ];then
                printf "${IP}${Green} C-State Disabled${NC} ${c_gov}"
                echo " "
                echo " "
        else
                printf "${IP}${Red} C-State Enabled - Must be Disabled ${NC} - Gov:${c_gov}"
                echo " "
                echo " "
        fi


}


#Default is running all commands
if [ -z "$opt" ]; then
        c_state_check
fi

#Running Option
if [ "$opt" == "-m" ]; then
        append_log
        c_state_check >> ${dir}/C-state-${month}-${day}-status &
fi


if [ "$opt" == "-v" ]; then
#       append_log
        c_state_validate >> ${dir}/C-state-${month}-${day}-validate &
fi
